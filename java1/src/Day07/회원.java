package Day07;

public class 회원 {
	
	// 1.필드 [ 변수 , 객체 등 ] 
	int 회원구분; // 0:관리자 1:개인회원 2.단체회원
	String 아이디;
	String 비밀번호;
	String 이름;
	String 주소;
	int 휴대전화;
	String 이메일;

	// 2. 생성자 [ 생성자이름 == 클래스이름 ]
	public 회원() {
		// 빈 생성자 => 내용물이 없는 객체 생성시 사용 
	}
	// 2. 생성자 [ 모든 필드를 갖는 생성자 ]
	public 회원( int 회원구분 , String 아이디 , String 비밀번호 
			, String 이름 , String 주소 
			, int 휴대전화 , String 이메일 ) {
		
		// this.멤버명 : 현재 클래스에 멤버 접근
		this.회원구분 = 회원구분;
		this.아이디 = 아이디;
		this.비밀번호 = 비밀번호;
		this.이름 = 이름;
		this.주소 = 주소;
		this.휴대전화 = 휴대전화;
		this.이메일 = 이메일;
	}
	// 2. 생성자 [ 특정 필드만 받는 생성자 ] 
	public 회원( String 아이디 , String 비밀번호) {
		this.아이디 = 아이디;
		this.비밀번호 = 비밀번호;
	}
	
	// 3. 메소드 : 미리 작성된 코드 => 함수 
		// 1. 한번 사용되는 코드 => 메소드 X
		// 2. 여러번 반복하여 사용되는 코드 = 메소드 O [ 재활용 ]
		// 3. 형태 : 접근제한자 반환값 메소드명( 인수 ) { 실행코드 } 
			// 접근제한자 : public : [모든곳에서 사용가능] 다른 패키지에서도 접근 가능 
			//			private : [현재클래스에서만]현재 클래스에서만 접근 가능 
			// 반환값 : 메소드 종료시 되돌려주는[남기는] 값 
				// return 
			// 인수 : 메소드 호출시 메소드 안으로 들어가는 메모리[변수/객체]
	
	// 1. 회원 주소를 반환해 주는 메소드
	public String 주소호출() {
		
	// public : 모든 곳에서 호출 가능한 메소드 
		// String : 반환타입 => 문자열 
			// 주소호출 : 메소드이름 [ 임의값 ]
				// (  ) : 인수가 없음 
		return this.주소;
			// return 값  	: 해당 값을 함수 종료시 반환
		
	}
	// 2. 회원 주소를 변경해주는 메소드 
	public void 주소변경( String 새로운주소 ) {
		this.주소 = 새로운주소;
		System.out.println(" 주소가 변경 되었습니다 ");
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
